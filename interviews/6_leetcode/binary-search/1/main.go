package main

import (
	"sort"
)

// **Первая:**

// На Авито размещено множество товаров, каждый из которых представлен числом.
// У каждого покупателя есть потребность в товаре, также выраженная числом.
// Если точного товара нет, покупатель выбирает ближайший по значению товар,
// что вызывает неудовлетворённость, равную разнице между его потребностью и купленным товаром.
// Количество каждого товара не ограничено, и один товар могут купить несколько покупателей.
// Рассчитайте суммарную неудовлетворённость всех покупателей.

// Нужно написать функцию, которая примет на вход два массива:
// массив товаров и массив потребностей покупателей, вычислит сумму неудовлетворённостей всех покупателей и вернет результат в виде числа.

// __________________________________
// ПРИМЕР
// Ввод
// goods = [8, 3, 5]
// buyerNeeds = [5, 14, 12, 44, 55] // 6 + 4 + 36 + 47 = 93

// Вывод
// res = 1 # первый покупатель покупает товар 5 и его неудовлетворённость = 0, второй также покупает товар 5 и его неудовлетворённость = 6-5 = 1

// needs - product = unhappy
// 0 + 6 + 4 + 36 + 47 = 93


// [3, 5, 8]
// [5, 12, 14, 44, 55]

// 0 + 6 + 4 + 36 + 47 = 93

// time O(N  * log(N)) + O(M * log(N))
// mem O(N  * log(N)) 

// [3, 5, 8, 20]
// target = 12
// l = 0 r = 4 m = 2 
// l = 2 r = 4 m = 3 
// l = 2 r = 3 m = 2
// array[l] = 8
func binSearch(target int, array []int) int {
    l, r := 0, len(array) // -1 len(array)
    // diff := 0
    for r - l > 1 {
        m := (l + r) / 2
        if target < array[m] { // target <= array[m] // target < m 
            r = m
        } else {
            l = m
        }
    }
    if array[l] == target {
        return 0
    }
    // [3, 5, 8, 13] target = 12
    // if array[r] больше чем len(array) проверить - выход за пределы массива

    // бинарный поиск ближайшего числа глянуть
    if r >= len(array) {
        return target - array[l]
    }
	if target - array[l] > array[r] - target {
        return array[r] - target // 13 - 12
    } else {
        return target - array[l] // 12 - 4
    }
}

func FindGood(goods []int, needs []int) int {
    // goods = sort.Slices(goods)
	sort.Ints(goods)
    unhappy := 0
    for _, need := range needs {
        unhappy += binSearch(need, goods)
    }
    return unhappy
}

