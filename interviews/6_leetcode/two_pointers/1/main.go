**2. Собери команду**  
**Условие задачи:**  
Вашему TL поставили задачу собрать максимально "ровную" команду по уровню. 
Он делегировал эту задачу вам, попросив написать функцию.  
Мы считаем "ровность" команды тем больше, чем меньше разница 
между минимальным и максимальным уровнями выбранных инженеров.  
У нас есть N1 бэкендеров, N2 фронтендеров, N3 тестировщиков и N4 дизайнеров,
мы знаем уровень каждого из них. Мы получаем уровни инженеров по функциям уже отсортированными.  
Соберите команду из 4х человек по одному из каждой функции. Если есть несколько вариантов, то предложите любой.  
**Пример 1**  
**Ввод:**  
```ruby

p1, p2, p3, p4
minDiff
res = []int{}
for {
   curMin, curMax
    // для каждого массива
    if p1+1 < len(arr) && arr[p1+1] < curMax && arr[p1+1] == curMin {
        p1++
        c
    } else if {

    } ...

    diff := curMax - curMin
    if diff < minDiff {
        minDiff = diff
        res = res[:0]
        res = append(res, arr[p1+1], arr[p2+2]...)

    }

}
engineers = {

                *         
  backend:  [1, 2, 2, 3],    2

             *  
  frontend: [0, 20],          2

             *    
  qa:       [3, 4, 4],       3

             *   
  design:   [2,  3]        
  

  0 
  
  
  -18
}
                                23
                    3
        2
 1 

                               -17
   1
   3
   

4 -> []

```
**Вывод:**  
```ruby
example_result = { backend: 3, frontend: 3, qa: 3, design: 3 }
```

**Пример 2**  
**Ввод:**  
```ruby

engineers = {
  backend: [5],
  frontend: [3, 6, 7, 10],
  qa: [3, 9, 11, 18],
  design: [20],
}

```
**Вывод:**  
```ruby
example_result = { backend: 5, frontend: 6, qa: 9, design: 20 }
```
